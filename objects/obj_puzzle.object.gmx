<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PUZ_WIDTH = 5;
PUZ_HEIGHT = 5;
PUZ_TYPE_N = 6;
PUZ_C[T_BROWN] = make_color_rgb(194, 92, 59);
PUZ_C[T_BLUE] = c_blue;
PUZ_C[T_GREEN] = c_green;
PUZ_C[T_YELLOW] = c_yellow;
PUZ_C[T_PURPLE] = c_purple;
PUZ_C[T_ATK] = c_white;

draw_mon_x = room_width/2;
draw_mon_y = room_height/4;

draw_puz_bev = 16;
draw_puz_w = room_width-draw_puz_bev;
draw_puz_h = room_width-draw_puz_bev;

draw_puz_x = draw_puz_bev/2;
draw_puz_y = room_height/2-draw_puz_h/2+64;

cur_x = 2;
cur_y = 2;
cur_sel = false;

scr_board_randomize();
scr_board_reset_smash();

stat_swap_max = 3;
stat_swaps = stat_swap_max;

mode=1; //1: allow swapping. 2: smash orbs
smash_timer = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>monsters</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a_mon_sprite[0] = spr_mon_whale;
a_mon_hpmax[0] = 1000;
a_mon_defense[0] = 0;
a_mon_name[0] = "Flying Whale"

scr_set_monster(0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>party</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a_pc_sprite[0] = spr_NaOH;
a_pc_name[0] = "NaOH"
a_pc_hp[0] = 400;
a_pc_atk[0] = 20;
a_pc_type[0] = T_BLUE;

a_pc_sprite[1] = spr_NaOH;
a_pc_name[1] = "Irish"
a_pc_hp[1] = 300;
a_pc_atk[1] = 60;
a_pc_type[1] = T_YELLOW;

a_pc_sprite[2] = spr_NaOH;
a_pc_name[2] = "Guy no. 3"
a_pc_hp[2] = 500;
a_pc_atk[2] = 30;
a_pc_type[2] = T_BROWN;

a_pc_sprite[3] = spr_NaOH;
a_pc_name[3] = "The Queen"
a_pc_hp[3] = 200;
a_pc_atk[3] = 40;
a_pc_type[3] = T_GREEN;

a_pc_sprite[4] = spr_NaOH;
a_pc_name[4] = "Sassy"
a_pc_hp[4] = 300;
a_pc_atk[4] = 30;
a_pc_type[4] = T_GREEN;

party_pc[0] = 0;
party_pc[1] = 1;
party_pc[2] = 2;
party_pc[3] = 3;

party_size = 4;

scr_setup_party();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode==1) {
    cur_sel = keyboard_check(vk_shift);
    
    if (keyboard_check_pressed(vk_left)) {
        if (cur_x&gt;0) {
            scr_cur_move(cur_x-1,cur_y)
        }
    }
    
    if (keyboard_check_pressed(vk_right)) {
        if (cur_x&lt;PUZ_WIDTH-1) {
            scr_cur_move(cur_x+1,cur_y)
        }
    }
    
    if (keyboard_check_pressed(vk_up)) {
        if (cur_y&gt;0) {
            scr_cur_move(cur_x,cur_y-1)
        }
    }
    
    if (keyboard_check_pressed(vk_down)) {
        if (cur_y&lt;PUZ_HEIGHT-1) {
            scr_cur_move(cur_x,cur_y+1)
        }
    }
    
    if (keyboard_check_pressed(vk_space)) {
        scr_endturn();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode==2) {
    smash_timer--;
    if (smash_timer&lt;0) {
        scr_smash();
    }
}
if (mode==3) {
    smash_timer--;
    if (smash_timer&lt;0) {
        scr_cascade();
    }
}
if (mode==4) {
    smash_timer--;
    if (smash_timer&lt;0) {
        scr_attack_end();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>interval_x = draw_puz_w/(PUZ_WIDTH)
interval_y = draw_puz_h/(PUZ_HEIGHT)

// orbs
for (x_=0;x_&lt;PUZ_WIDTH;x_++) {
    for (y_=0;y_&lt;PUZ_HEIGHT;y_++) {
        if (clear[x_,y_])
            continue;
        col = PUZ_C[board[x_,y_]];
        draw_x = (2*x_+1)*interval_x/2 + draw_puz_x;
        draw_y = (2*y_+1)*interval_y/2 + draw_puz_y;
        draw_sprite_ext(spr_orb,1,draw_x,draw_y,1,1,0,col,1)
    }
}

if (mode==1) {
    // cursor
    draw_x = (2*cur_x+1)*interval_x/2 + draw_puz_x;
    draw_y = (2*cur_y+1)*interval_y/2 + draw_puz_y;
    
    if (cur_sel)
        draw_set_colour(c_lime);
    else
        draw_set_colour(c_orange);
    
    draw_set_alpha(0.65)
    for (i=0;i&lt;5;i++) {
        draw_circle(draw_x,draw_y,32-i/2,true);
    }
}

// draw misc text

draw_set_colour(c_white);
draw_set_alpha(1);

draw_text(room_width-32,room_height-64,stat_swaps);
if (mode==2 || mode == 3) {
    if (combo &gt; 0) {
        draw_text(room_width-128,room_height-64,"COMBO x" + string(combo));
    }
}

// draw monster

draw_set_halign(fa_center)
draw_sprite(mon_sprite,1,draw_mon_x,draw_mon_y);
draw_text(draw_mon_x,24,mon_name);
draw_text(draw_mon_x,48,string(mon_hp) + " HP");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>party</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>panel_space = 16;
panel_width = (room_width - panel_space)/party_size;
panel_height = 100;

for (i=0;i&lt;party_size;i++) {
    draw_y = room_height - 24;
    draw_x = panel_space + panel_width*i;
    draw_set_colour(PUZ_C[pc_type[i]])
    draw_rectangle(draw_x,draw_y,draw_x+panel_width-panel_space,draw_y+panel_height,false)
    
    // damage text
    if (pc_damage[i]&gt;0) {
        scr_draw_fancy_text(draw_x+panel_width/2,room_height-28,string(pc_damage[i]))
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
